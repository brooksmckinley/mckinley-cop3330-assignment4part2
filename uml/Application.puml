@startuml
'https://plantuml.com/class-diagram

'Main entrypoint

class App {
    +{static} void main(String[] args)
    +void start(Stage primaryStage)
}

'Views
package views {
    class ItemView {
        +{static} Node createItem(Item item)
        +{static} Node createEditableItem(Item item)
    }
}

'Controllers
package controllers {
    class ListController {
        #TextField textField
        #DatePicker datePicker

        +void handleAddItem(ActionEvent event)
    }

    class ItemController {
        -Item item

        #Label taskDescription
        #Label dueDate
        #CheckBox checkBox

        +void initialize()
        +void handleEditButton(Node target, int itemID)
        +void handleDeleteButton(Node target, int itemID)
        +void handleSave(Node target, int itemID)
        +void handleCheck(ActionEvent event, int itemID)
    }

    class FileMenuController {
        +void handleOpen(ActionEvent event)
        +void handleSave(ActionEvent event)
        +void handleQuit(ActionEvent event)
    }

    class EditMenuController {
        +void handleClearList()
    }

    class ViewMenuController {
        +void handleViewAllItems(ActionEvent event)
        +void handleViewIncompleteItems(ActionEvent event)
        +void handleViewCompletedItems(ActionEvent event)
    }

}

'Models

package models {

    class List {
        File file
        ArrayList<Item> items

        +void addItem(Item toAdd)
        +Item getItem(int id)
        +void setItem(int id, Item replacement)
        +void setFile(File newFile)
        +void removeItem(int id)
        +void saveList()
        {static} +List loadList(Path filePath)
        {static} +List[] loadMultipleLists(Path[] filePaths)

        +ArrayList<Item> getAllItems()
        +ArrayList<Item> getIncompleteItems()
        +ArrayList<Item> getCompletedItems()

        +void setTitle(String newTitle)

        -int getItemIndex(int id)
        -String serialize()
        -{static} List deserialize()
    }

    class Item {
        int id
        String description
        String dueDate
        boolean completed

        +int getID()
        +String getDescription()
        +String getDueDate()
        +boolean getCompleted()
        +void setDescription(String newDescription)
        +void setDueDate(String newDueDate)
        +void setCompleted(boolean newCompleted)
    }

    List *-- Item
}

'Cross-Package dependencies
List o-- ListController
List o-- FileMenuController
List o-- EditMenuController
List o-- ItemController
ItemView o-- ListController
ItemView o-- ItemController
ListView o-- FileMenuController

App *-- List


@enduml